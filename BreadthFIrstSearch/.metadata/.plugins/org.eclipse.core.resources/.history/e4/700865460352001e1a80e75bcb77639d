/**
 * 
 */

/**
 * @author tom
 *
 */
public class Node {

	/**
	 * @param args
	 */
	
	/*	state the state to which the node corresponds;
	parent: 	the node in the tree that generated this node
	action: 	the action that was applied to the parentâ€™s state 
				to generate this node;
	pathCost: 	the total cost of the path from the initial state to 
				this node */

	int state = 0;
	Node parent;
	int action = 0;
	int pathCost = 0;
	
	
	public Node(Node parent, int pathCost) {
		
		/**
		 * Constructor for Node with parent
		 */
		this.setParent(parent);
		this.addPathCost(pathCost);
	}
	
	public void setParent(Node node) {
		this.parent = node;
	}
	public void setState(int state) {
		this.state = state;
	}
	public void setAction(int action) {
		this.action = action;
	}
	public void addPathCost(int cost) {
		this.pathCost += cost;
	}
	
		
		
		
		



}
